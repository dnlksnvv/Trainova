name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*
    paths:
      - 'frontend/**'
      - '.github/workflows/**'

  pull_request:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*
    paths:
      - 'frontend/**'
      - '.github/workflows/**'

jobs:
  test:
    name: 🧪 Run Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: npm ci --legacy-peer-deps

      - name: 🏗 Build frontend
        working-directory: ./frontend
        run: npm run build

  deploy:
    name: 🚀 Deploy to Server
    runs-on: ubuntu-latest
    needs: test
    if: |
      (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main') && github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      - name: 🔄 Pull latest code from GitHub on server
        run: |
          BRANCH=$(echo "${GITHUB_REF#refs/heads/}")
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova && git fetch origin && git checkout $BRANCH && git pull origin $BRANCH"

      - name: 🛑 Docker Compose Down
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose down"

      - name: 🧱 Docker Compose Build
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose build --no-cache"

      - name: 🚀 Docker Compose Up
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose up -d"