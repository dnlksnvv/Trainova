name: Backend CI/CD

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*
    paths:
      - 'backend/**'
      - '.github/workflows/**'

  pull_request:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*
    paths:
      - 'backend/**'
      - '.github/workflows/**'

jobs:
  test:
    name: 🔁 Run tests for backend services
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies for all services
        run: |
          pip install pytest
          for service in auth_service workout_service; do
            pip install -r backend/$service/requirements.txt
          done

      - name: 🔑 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: 📥 Download .env from remote
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SSH_USER }}/Trainova/docker/.env .env

      - name: ✅ Run pytest for all backend services
        run: |
          for service in auth_service workout_service; do
            echo "Running tests for $service"
            cp .env backend/$service/.env
            cd backend/$service
            pytest
            cd - > /dev/null
          done

  deploy:
    name: 🚀 Deploy to Server
    runs-on: ubuntu-latest
    needs: test
    if: |
      (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main') && github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      - name: 🔄 Pull latest code from GitHub on server
        run: |
          BRANCH=$(echo "${GITHUB_REF#refs/heads/}")
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova && git fetch origin && git checkout $BRANCH && git pull origin $BRANCH"

      - name: 🛑 Docker Compose Down
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose down"

      - name: 🧱 Docker Compose Build
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose build --no-cache"

      - name: 🚀 Docker Compose Up
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd /home/${{ secrets.SSH_USER }}/Trainova/docker && docker-compose up -d"